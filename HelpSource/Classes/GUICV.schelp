CLASS:: GUICV
SUMMARY:: GUICV base class for look and feel
CATEGORIES:: Green>GUICV
RELATED:: Classes/AbstractGUICVView, Classes/CV, Overviews/GUICVOverview


DESCRIPTION::
A helper class defining the look and feel of a few GUI widgets. Contains a skin and methods for generating styled views.

See LINK::Overviews/GUICVOverview:: for practical usage.


SUBSECTION:: Skin

Access the GUICV skin with...
CODE::
GUI.skins.guiCV;

/*
-> ( 'background': Color(), 'fontSmallSpecs': [ Menlo, 8 ], 'knobWidth': 40, 'sliderWidth': 20,
  'spacing': 4, 'palette': a QPalette, 'foreground': Color(0.019607843137255, 0.24313725490196, 0.023529411764706), 'highlight': Color(0.36862745098039, 0.97647058823529, 0.36862745098039), 'fontColor': Color(0.36862745098039, 0.70980392156863, 0.36862745098039),
  'buttonHeight': 15, 'fontSpecs': [ Menlo, 10 ], 'margin': Point( 4, 4 ), 'sliderHeight': 75 )
*/
::

and overwrite entries like this...
CODE::
GUI.skins.guiCV.foreground= Color.blue;
//will change all GUICV widgets
::

GUICV's skin expects the following entries...

DEFINITIONLIST::
## background || a LINK::Classes/Color::.
## buttonHeight || an LINK::Classes/Integer::.
## fontColor ||  a LINK::Classes/Color::.
## fontSpecs || an LINK::Classes/Array:: with fontName LINK::Classes/String:: and fontSize LINK::Classes/Integer:: e.g. CODE::["Menlo", 10]::.
## fontSmallSpecs || an LINK::Classes/Array:: with fontName LINK::Classes/String:: and fontSize LINK::Classes/Integer:: e.g. CODE::["Menlo", 8]::.
## foreground || a LINK::Classes/Color::.
## highlight || a LINK::Classes/Color::.
## knobWidth || an LINK::Classes/Integer::. Also used knob height and for horizontal sliders (CODE::knobWidth*2::).
## margin || an LINK::Classes/Integer::.
## sliderHeight || an LINK::Classes/Integer::. For vertical sliders. Horizontal sliders use CODE::buttonHeight::.
## sliderWidth || an LINK::Classes/Integer::. For vertical sliders. Horizontal sliders use CODE::knobWidth*2::.
## spacing || an LINK::Classes/Integer::.
## palette || a LINK::Classes/QPalette::.
::


SUBSECTION:: Methods

The methods for generating views are used like this...
CODE::
GUICV.knob().front;
::


CLASSMETHODS::

METHOD:: button, knob, levelIndicator, numberBox, popUpMenu, slider, staticText, textField

ARGUMENT:: parent

ARGUMENT:: bounds


SUBSECTION:: tools


METHOD:: adapt
Make a view green by setting the palette, font and various colours. The settings are from CODE::GUICV.skins.guiCV::.

CODE::
a= Button();
a= GUICV.adapt(a);
a.front;
::

ARGUMENT:: view
a LINK::Classes/View::

RETURNS:: the same LINK::Classes/View::

METHOD:: fixDec
LINK::Classes/Float:: to LINK::Classes/String:: conversion with fixed number of decimals.

CODE::
GUICV.fixDec(0.123)  //0.12
GUICV.fixDec(0.19, 1)  //0.2
GUICV.fixDec(3.3e-2)  //0.03
::

ARGUMENT:: val
A LINK::Classes/Float::.

ARGUMENT:: numDecimals
Number of decimals in string.

RETURNS:: a LINK::Classes/String::.
