CLASS:: AbstractGUICV
SUMMARY:: abstract class
CATEGORIES:: Green
RELATED:: Overviews/GUICVOverview


DESCRIPTION::

NOTE::
This is an abstract class. Do not instantiate - use the subclasses
::


CLASSMETHODS::

METHOD:: new
Create a new widget.

ARGUMENT:: ref
A LINK::Classes/Ref:: instance. If not given, one will be created.

ARGUMENT:: spec
A LINK::Classes/ControlSpec:: instance. If not given, a default one will be created using CODE::nil.asSpec::.

ARGUMENT:: args
Optional additional arguments that will be passed to the widget class when created. Can be a keyValuePair array or a dictionary. An example is \thumbSize for the sliders.

ARGUMENT:: update
Flag used in special cases. An example is when several widgets are linked to the same ref and one want to avoid calling the action function on one or more at initialisation.

METHOD:: skin


INSTANCEMETHODS::

PRIVATE:: initAbstractGUICV, prConnect, prCreateView

METHOD:: ref
The LINK::Classes/Ref::.

METHOD:: spec
The LINK::Classes/ControlSpec::.

METHOD:: value
Get or set the current widget value. This value will be constrained to the spec.

METHOD:: get
Get the normalised value (using spec.unmap).

METHOD:: set
Set the normalised value (using spec.map).

ARGUMENT:: val
A LINK::Classes/Float:: between 0.0 and 1.0

METHOD:: softSet
If val is within range of the current widget value, set the value (using spec.map). Both values normalised. Useful for MIDI controllers.

ARGUMENT:: val
A LINK::Classes/Float:: between 0.0 and 1.0

ARGUMENT:: within
A LINK::Classes/Float:: between 0.0 and 1.0 specifying a +/- range.

RETURNS:: LINK::Classes/True:: if current widget value was updated, LINK::Classes/False:: if not (out of range).

EXAMPLES::

CODE::
//MIDI ControlChange 1 with softSet
(
a= GUICVKnob().front;
MIDIIn.connectAll;
MIDIFunc.cc({|val| {a.softSet(val.postln/127, 0.1)}.defer}, 1);
)
::
